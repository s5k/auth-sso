type Member {
  id: String!
  email: String!
  isActive: Boolean!
  avatar: String
}

type Product {
  id: String!
  name: String!
  description: String!
  thumbnail: String!
  category: Category
  collection: Collection!
  createdAt: String!
  updatedAt: String!
}

type Category {
  id: String!
  name: String!
  description: String!
  products: [Product]!
  collection: Collection!
  createdAt: String!
  updatedAt: String!
}

type PackageCategory {
  id: String!
  name: String!
  description: String!
  products: [Product]!
  collection: Collection!
  createdAt: String!
  updatedAt: String!
}

type Package {
  id: String!
  name: String!
  description: String!
  thumbnail: String!
  category: Category
  collection: Collection!
  createdAt: String!
  updatedAt: String!
}

type Collection {
  id: String!
  name: String!
  description: String!
  thumbnail: String!
  members: [Member]!
  products: [Product]!
  categories: [Category]!
  packages: [Package]!
  packageCategories: [PackageCategory]!
  updatedAt: String!
}

input CreateProductInput {
  name: String!
  description: String
  thumbnail: String
  category: String
  parent_collection: String!
}

input UpdateProductInput {
  id: String!
  name: String
  description: String
  thumbnail: String
  category: String
  parent_collection: String
}

input CreateCategoryInput {
  name: String!
  description: String
  parent_collection: String!
}

input UpdateCategoryInput {
  id: String!
  name: String
  description: String
  parent_collection: String
}

input CreatePackageInput {
  name: String!
  description: String
  thumbnail: String
  category: String
  parent_collection: String!
}

input UpdatePackageInput {
  id: String!
  name: String
  description: String
  thumbnail: String
  category: String
  parent_collection: String
}

input CreatePackageCategoryInput {
  name: String!
  description: String
  parent_collection: String!
}

input UpdatePackageCategoryInput {
  id: String!
  name: String
  description: String
  parent_collection: String
}

input CreateCollectionInput {
  name: String!
  description: String
  thumbnail: String
}

input UpdateCollectionInput {
  id: String!
  name: String
  description: String
  thumbnail: String
}

type Query {
  collection: [Collection]!
  getSingleCollection(id: String!): Collection
  categories: [Category]!
  getSingleCategory(id: String!): Category
  products: [Product]!
  getSingleProduct(id: String!): Product
  packages: [Package]
  getSinglePackage(id: String!): Package
  packageCategories: [PackageCategory]
  getSinglePackageCategory(id: String!): PackageCategory
}

type Mutation {
  createCollection(createCollectionInput: CreateCollectionInput!): Collection!
  updateCollection(updateCollectionInput: UpdateCollectionInput!): Collection!
  removeCollection(id: String!): Collection

  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  updateCategory(updateCategoryInput: UpdateCategoryInput!): Category!
  removeCategory(id: String!): Category

  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  removeProduct(id: String!): Product

  createPackage(createPackageInput: CreatePackageInput!): Package!
  updatePackage(updatePackageInput: UpdatePackageInput!): Package!
  removePackage(id: String!): Package

  createPackageCategory(
    createPackageCategoryInput: CreatePackageCategoryInput!
  ): PackageCategory!
  updatePackageCategory(
    updatePackageCategoryInput: UpdatePackageCategoryInput!
  ): PackageCategory!
  removePackageCategory(id: String!): PackageCategory
}
